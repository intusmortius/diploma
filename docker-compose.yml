version: "3.8"

services:
  php:
    build:
      context: ./docker/php
    container_name: php
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - app-network

  mysql-host:
    image: mysql:5.7
    container_name: mysql-host
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql:/var/lib/mysql    
    networks:
      - app-network

  nginx:
    build:
      context: ./docker/nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - php
      - mysql-host
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - app-network

  composer:
    build:
      context: ./docker/composer
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - app-network
    entrypoint: ['composer', '--ignore-platform-reqs']
  
  npm:
    image: node:latest
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
  
  artisan:
    build:
      context: ./docker/php
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql-host
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql-host
      PMA_PORT: 3306
    ports:
      - "3309:80"
    depends_on:
      - mysql-host
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
